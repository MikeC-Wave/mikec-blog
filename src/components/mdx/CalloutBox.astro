---
// CalloutBox component for highlighting key insights, warnings, success messages, and notes
export interface Props {
  type?: 'success' | 'warning' | 'info' | 'note' | 'error';
  title?: string;
  class?: string;
}

const { type = 'info', title, class: className = '' } = Astro.props;

// Define styles for each callout type with modern design
const typeStyles = {
  success: {
    container: 'bg-gradient-to-r from-emerald-50 to-green-50 border border-emerald-200 shadow-emerald-100',
    accent: 'bg-gradient-to-b from-emerald-500 to-green-600',
    icon: 'âœ¨',
    iconBg: 'bg-emerald-100 text-emerald-700',
    titleColor: 'text-emerald-900',
    textColor: 'text-emerald-800',
    defaultTitle: 'Success'
  },
  warning: {
    container: 'bg-gradient-to-r from-amber-50 to-yellow-50 border border-amber-200 shadow-amber-100',
    accent: 'bg-gradient-to-b from-amber-500 to-orange-600',
    icon: 'âš¡',
    iconBg: 'bg-amber-100 text-amber-700',
    titleColor: 'text-amber-900',
    textColor: 'text-amber-800',
    defaultTitle: 'Warning'
  },
  error: {
    container: 'bg-gradient-to-r from-red-50 to-rose-50 border border-red-200 shadow-red-100',
    accent: 'bg-gradient-to-b from-red-500 to-rose-600',
    icon: 'ðŸš¨',
    iconBg: 'bg-red-100 text-red-700',
    titleColor: 'text-red-900',
    textColor: 'text-red-800',
    defaultTitle: 'Error'
  },
  info: {
    container: 'bg-gradient-to-r from-blue-50 to-cyan-50 border border-blue-200 shadow-blue-100',
    accent: 'bg-gradient-to-b from-blue-500 to-cyan-600',
    icon: 'ðŸ’¡',
    iconBg: 'bg-blue-100 text-blue-700',
    titleColor: 'text-blue-900',
    textColor: 'text-blue-800',
    defaultTitle: 'Info'
  },
  note: {
    container: 'bg-gradient-to-r from-slate-50 to-gray-50 border border-slate-200 shadow-slate-100',
    accent: 'bg-gradient-to-b from-slate-500 to-gray-600',
    icon: 'ðŸ“‹',
    iconBg: 'bg-slate-100 text-slate-700',
    titleColor: 'text-slate-900',
    textColor: 'text-slate-800',
    defaultTitle: 'Note'
  }
};

const currentStyle = typeStyles[type];
const displayTitle = title || currentStyle.defaultTitle;
---

<div class={`relative my-8 rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 ${currentStyle.container} ${className}`}>
  <!-- Accent border -->
  <div class={`absolute left-0 top-0 bottom-0 w-1.5 ${currentStyle.accent}`}></div>
  
  <!-- Main content -->
  <div class="p-6 pl-8">
    <div class="flex items-start gap-4">
      <!-- Icon -->
      <div class={`flex-shrink-0 w-12 h-12 rounded-xl ${currentStyle.iconBg} flex items-center justify-center shadow-sm`}>
        <span class="text-xl" aria-hidden="true">
          {currentStyle.icon}
        </span>
      </div>
      
      <!-- Content -->
      <div class="flex-1 min-w-0">
        <h4 class={`${currentStyle.titleColor} font-bold text-xl mb-3 leading-tight tracking-tight`}>
          {displayTitle}
        </h4>
        <div class={`prose prose-sm max-w-none ${currentStyle.textColor} [&>*:first-child]:mt-0 [&>*:last-child]:mb-0`}>
          <slot />
        </div>
      </div>
    </div>
  </div>
  
  <!-- Subtle background pattern -->
  <div class="absolute inset-0 opacity-5 pointer-events-none">
    <svg class="w-full h-full" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
      <defs>
        <pattern id="dots" x="0" y="0" width="10" height="10" patternUnits="userSpaceOnUse">
          <circle cx="5" cy="5" r="1" fill="currentColor"/>
        </pattern>
      </defs>
      <rect width="100%" height="100%" fill="url(#dots)"/>
    </svg>
  </div>
</div> 