---
description: 
globs: 
alwaysApply: false
---
# Tailwind CSS v4 + Astro Integration Guide

## Validated Setup Information

### Current Project Setup (CONFIRMED WORKING)
- **Astro Version**: 5.7.4 with automatic Tailwind v4 support
- **Tailwind Version**: v4.1.10 (latest stable)
- **Integration**: Manual `@tailwindcss/vite` plugin setup
- **CSS Syntax**: `@import "tailwindcss";` (correct for v4)

### Setup Methods (Research Validated)

**Option 1: Astro Automatic (Recommended for new projects)**
```bash
npx astro add tailwind
```
- Astro 5.2+ automatically detects and installs appropriate version
- Handles v3/v4 configuration automatically
- Creates proper CSS imports based on version

**Option 2: Manual v4 Setup (Current project method)**
```bash
npm install tailwindcss@next @tailwindcss/vite
```
- Requires manual `@tailwindcss/vite` plugin configuration
- Must use `@import "tailwindcss";` in CSS
- More control over configuration

### CSS Syntax by Version
- **v3**: `@tailwind base; @tailwind components; @tailwind utilities;`
- **v4**: `@import "tailwindcss";`
- **Current Project**: Using v4 syntax ✅

## Utility-First Implementation

### CRITICAL: Avoid Custom CSS Classes
❌ **Wrong**: Creating custom CSS classes in global.css
```css
.hero-section { /* custom styles */ }
.stats-grid { /* custom styles */ }
```

✅ **Correct**: Use utility classes directly in HTML
```astro
<section class="relative bg-[url('/hero.jpg')] bg-cover bg-center h-[50vh] md:h-[80vh]">
<div class="grid grid-cols-1 md:grid-cols-3 gap-6">
```

### Background Images Best Practices
- **Use utility**: `bg-[url('/image.jpg')]` not inline styles
- **Complete pattern**: `bg-[url('/hero.jpg')] bg-cover bg-center bg-no-repeat`
- **Responsive**: `h-[50vh] sm:h-[70vh] md:h-[80vh] min-h-[300px]`

### Pseudo-elements
- **Required**: `before:content-['']` for pseudo-elements to render
- **Safe syntax**: Single quotes inside brackets are valid
- **Alternative**: `before:content-[""]` also works

## Component Patterns

### Hero Section (Complete Example)
```astro
<section class="relative bg-[url('/hero-image.jpg')] bg-cover bg-center bg-no-repeat 
             h-[50vh] sm:h-[70vh] md:h-[80vh] min-h-[300px] md:min-h-[500px]
             flex items-center justify-center
             before:absolute before:inset-0 before:bg-black/40 before:z-[1] before:content-['']">
  <div class="relative z-10 text-center text-white max-w-4xl mx-auto px-4">
    <h1 class="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold mb-4 leading-tight">
      Title
    </h1>
    <p class="text-lg sm:text-xl md:text-2xl mb-8 opacity-90">
      Subtitle
    </p>
  </div>
</section>
```

### Stats Grid
```astro
<section class="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-4xl mx-auto">
  <div class="text-center p-6 bg-gray-50 rounded-lg border border-gray-200">
    <span class="block text-3xl font-bold text-blue-600">12+</span>
    <span class="text-gray-600 text-sm">Years Experience</span>
  </div>
</section>
```

### Blog Post Grid
```astro
<section class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
  <article class="p-6 border border-gray-200 rounded-lg bg-white hover:shadow-md hover:border-blue-600 transition-all duration-200">
    <h3 class="text-xl font-semibold text-gray-900 mb-2">Post Title</h3>
    <p class="text-gray-600 text-sm mb-4">Date</p>
    <p class="text-gray-700 leading-relaxed">Description</p>
  </article>
</section>
```

## Typography Plugin Integration

### Configuration
```js
// tailwind.config.js
plugins: ['@tailwindcss/typography']
```

### Usage Patterns
```astro
<!-- Blog content with typography -->
<article class="prose prose-lg prose-blue max-w-none">
  <Content />
</article>
```

### Custom Typography in Config
```js
typography: {
  DEFAULT: {
    css: {
      maxWidth: 'none',
      color: '#374151',
      // Custom styles for headings, code, etc.
    }
  }
}
```

## Performance and Maintenance

### File Organization
- **Global CSS**: Only fonts, base styles, and Tailwind import
- **Component Styles**: Use utility classes in HTML
- **Custom Styles**: Avoid unless absolutely necessary

### Responsive Design Patterns
- **Mobile-first**: Start with base styles, add breakpoint modifiers
- **Common breakpoints**: `sm:` (640px), `md:` (768px), `lg:` (1024px), `xl:` (1280px)
- **Consistent spacing**: Use Tailwind's spacing scale (4, 6, 8, 12, 16, etc.)

### Color System
```js
// Use design tokens from config
colors: {
  primary: { DEFAULT: '#2563eb', light: '#3b82f6', dark: '#1d4ed8' },
  gray: { /* custom gray scale */ }
}
```

## Common Issues and Solutions

### Build Errors
- **Vite plugin missing**: Ensure `@tailwindcss/vite` in astro.config.mjs
- **Wrong CSS syntax**: Use `@import "tailwindcss";` for v4
- **Content paths**: Verify file extensions in tailwind.config.js

### Styling Issues
- **Pseudo-elements not showing**: Add `before:content-['']`
- **Background images not loading**: Use `bg-[url()]` utility
- **Responsive not working**: Check mobile-first approach
- **Specificity conflicts**: Avoid mixing custom CSS with utilities

### Development Workflow
1. **Design with utilities**: Build layouts using Tailwind classes
2. **Extract to components**: Use Astro components for reusable patterns
3. **Avoid custom CSS**: Prefer configuration over custom styles
4. **Test responsively**: Verify across all breakpoints

## Migration from Custom CSS

### Step-by-Step Process
1. **Identify custom classes**: Find `.custom-class` definitions
2. **Convert to utilities**: Replace with equivalent Tailwind classes
3. **Test functionality**: Ensure styling is preserved
4. **Remove custom CSS**: Delete unused custom styles
5. **Optimize**: Look for repeated patterns to extract into components

### Example Conversion
❌ **Before**: Custom CSS
```css
.hero-section {
  background-image: url('/hero.jpg');
  height: 60vh;
  display: flex;
  align-items: center;
}
```

✅ **After**: Utility classes
```astro
<section class="bg-[url('/hero.jpg')] h-[60vh] flex items-center">
```

This approach ensures maintainable, consistent, and performant styling across the entire application.

## Core Patterns

### Typography & Content Styling
- **Always use `@tailwindcss/typography` plugin** for blog content and markdown
- **Create reusable Prose component** for consistent typography across pages
- **Configure typography in tailwind.config.js** with custom styles for headings, links, code, etc.
- **Use prose element modifiers** for fine-grained control (e.g., `prose-h2:border-b`, `prose-code:bg-pink-50`)
- **Apply prose classes with size variants** (`prose-lg`, `prose-xl`) for different content contexts

### Component Structure
```astro
// Prose component pattern
<Prose size="lg">
  <slot />
</Prose>

// BlogPost layout pattern
<article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
  <header class="mb-12">
    <!-- Hero content -->
  </header>
  <Prose size="lg">
    <slot />
  </Prose>
  <footer class="mt-16 pt-8 border-t">
    <!-- Footer content -->
  </footer>
</article>
```

### Typography Best Practices
- **Enhanced heading hierarchy** with proper spacing and visual weight
- **Custom code styling** with colored backgrounds and borders
- **Blockquote styling** with left borders and background colors
- **Link styling** with hover effects and underline animations
- **Table styling** with borders, hover states, and proper spacing
- **Image styling** with rounded corners and shadows

## Global CSS Structure

```css
@import "tailwindcss";

@font-face {
  font-family: 'Atkinson';
  src: url('/fonts/atkinson-regular.woff') format('woff');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Atkinson';
  src: url('/fonts/atkinson-bold.woff') format('woff');
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}

html, body {
  font-family: 'Atkinson', system-ui, sans-serif;
  line-height: 1.6;
}
```

## Critical Implementation Notes

### Tailwind v4 Differences
- Use `@import "tailwindcss"` instead of `@tailwind` directives
- Avoid `@apply` directive - use utility classes directly
- Plugin syntax: `@plugin "@tailwindcss/typography"`

### Typography Configuration
- Configure typography theme in `tailwind.config.js` under `theme.extend.typography`
- Use CSS-in-JS syntax for custom styles
- Leverage element modifiers for consistent styling patterns

### Responsive Design
- Use responsive prose variants (`prose-lg md:prose-xl`)
- Apply responsive spacing and typography scaling
- Ensure mobile-first approach with proper breakpoints

## Common Pitfalls to Avoid

1. **Don't use @apply with custom classes** - causes build errors in v4
2. **Don't mix v3 and v4 syntax** - use consistent v4 patterns throughout
3. **Don't forget prose element modifiers** - they provide powerful styling control
4. **Don't hardcode typography styles** - use the typography plugin configuration
5. **Don't skip responsive considerations** - typography should scale across devices
